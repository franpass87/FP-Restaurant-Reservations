name: Build ZIP on merge to main

on:
  pull_request:
    types: [closed]

permissions:
  contents: read

jobs:
  build-zip:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    env:
      PLUGIN_SLUG: fp-restaurant-reservations
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer:v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install npm dependencies and build assets
        run: |
          npm install
          npm run build

      - name: Install composer deps (no dev)
        run: |
          composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
          composer dump-autoload -o --classmap-authoritative

      - name: Ensure tools present
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync zip

      - name: Package plugin
        run: |
          set -e
          OUTDIR=build/${PLUGIN_SLUG}
          rm -rf build && mkdir -p "$OUTDIR"
          rsync -a ./ "$OUTDIR" \
            --exclude ".git/" --exclude ".github/" --exclude "node_modules/" \
            --exclude "tests/" --exclude "docs/" --exclude "build/" \
            --exclude "scripts/" --exclude "tools/" --exclude ".gitignore" \
            --exclude "*.zip" --exclude "*.log" --exclude "AUDIT/" \
            --exclude "*.md" --exclude ".idea/" --exclude ".vscode/" \
            --exclude ".gitattributes" --exclude "package.json" \
            --exclude "package-lock.json" --exclude "phpcs.xml" \
            --exclude "phpstan.neon" --exclude "vite.config.js" \
            --exclude ".codex-state.json" --exclude ".rebuild-state.json" \
            --exclude "eslint.config.js" --exclude ".prettierrc.json" \
            --exclude "docker-compose.yml" --exclude "assets/js/fe/"
          (cd build && zip -r "${PLUGIN_SLUG}.zip" "${PLUGIN_SLUG}")
          echo "ZIP creato: build/${PLUGIN_SLUG}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_SLUG }}
          path: build/*.zip
          if-no-files-found: error
